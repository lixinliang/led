{"name":"Led","tagline":"Create a canvas like a led pannel","body":"# Create a canvas like a led pannel\r\n\r\n> *led* 基于支持Canvas API的浏览器\r\n\r\n### <a name=\"top\"></a>目录\r\n* [简介(Intro)](#intro)\r\n* [示例(Demo)](#demo)\r\n* [使用方法(Usage)](#usage)\r\n* [参数列表(Config)](#config)\r\n* [方法列表(API)](#api)\r\n* [回调函数(Callback)](#callback)\r\n* [已知问题(Issues)](#known-issues)\r\n* [License](#license)\r\n\r\n### <a name=\"intro\"></a>简介(Intro) [[⬆]](#top)\r\n使用&lt;canvas&gt;实现文字粒子效果，除了允许输入字符还允许输入特定命令。\r\n感谢[shape-shifter]的帮助。\r\n\r\nThis canvas plugin is base on [shape-shifter]. Appreciate for its help.\r\n\r\n### <a name=\"demo\"></a>示例(Demo) [[⬆]](#top)\r\n[Demo]\r\n\r\n### <a name=\"usage\"></a>使用方法(Usage) [[⬆]](#top)\r\n[How to use]\r\n\r\n### <a name=\"config\"></a>参数列表(Config) [[⬆]](#top)\r\n|   参数(args)    |     说明(desc)     |          默认值(default)         | 可填值(allowed) |\r\n|----------------|--------------------|---------------------------------|----------------|\r\n| content        | 画布               | '[data-role=led-content]'        | selector      |\r\n| width          | 画布宽度            | window.innerWidth               | Number        |\r\n| height         | 画布高度            | window.innerHeight              | Number        |\r\n| split          | 命令句分隔符         | '&brvbar;'  (&amp;brvbar;)     | String        |\r\n| command        | 命令标识符          | '#'                             | String        |\r\n| partition      | 命令参数标识符       | ' ' (&amp;nbsp;)                | String         |\r\n| error          | 语法错误时默认命令    | 'What?'                         | String         |\r\n| action         | 创建对象时默认命令    | 'hello'                         | String         |\r\n| keyword        | url上匹配命令的关键词 | 'led'                           | String         |\r\n| minCount       | 最小数数值           | 1                              | Number         |\r\n| maxCount       | 最大数数值           | 10                             | Number         |\r\n| maxShapeSize   | 形状最大参数         | 30                             | Number         |\r\n| rectangleWidth | 矩形默认宽度         | 30                             | Number         |\r\n| rectangleHeight| 矩形默认高度         | 15                             | Number         |\r\n| circleRadius   | 圆形默认半径         | 18                             | Number         |\r\n| formatTime     | 日期对象转字符串函数  | anonymous function(){ ... }     | Function      |\r\n| imgUrl         | 图标路径            | '/img/icon/'                    | String         |\r\n| imgType        | 图标格式            | '.png'                          | String         |\r\n| speed          | 普通命令间隔时间      | 2000                            | Number         |\r\n| countSpeed     | 数数命令间隔时间      | 1000                            | Number         |\r\n| timeSpeed      | 时间命令间隔时间      | 1000                            | Number         |\r\n| gap            | 圆点间距            | 13                               | Number         |\r\n| fontSize       | 文字大小            | 1000                             | Number         |\r\n| fontFamily     | 文字字体            | 'Avenir, Helvetica Neue, Helvetica, Arial, sans-serif'| String |\r\n| pointColor     | 圆点颜色            | { r : 255, g : 102, b : 51, a : 0.3 }| Object     |\r\n| shapeOpactiy   | 组成形状时的圆点透明度| 0.9                              | Number         |\r\n\r\n### <a name=\"api\"></a>方法列表(API) [[⬆]](#top)\r\n| 方法(API) | 说明(desc)  | 参数(args) |\r\n|----------|-------------|-----------|\r\n| init     | 创建对象     | null |\r\n| render   | 重绘画图     | width(\\*Number), height(\\*Number) |\r\n| simulate | 模拟        | action(\\*String|Array) |\r\n| reset    | 撤销命令     | null |\r\n| clear    | 清除画布     | null |\r\n| stop     | 暂停动画     | null |\r\n| start    | 开始动画     | null |\r\n| destroy  | 销毁对象     | null |\r\n| shuffle  | 打乱一下     | null |\r\n| on       | 事件委托     | event(\\*String), callback(\\*Function) |\r\n| off      | 撤销事件委托  | event(\\*String), callback(\\*Function) |\r\n| trigger  | 触发事件     | event(\\*String), callback(\\*Function), args |\r\n\r\n\r\n### <a name=\"callback\"></a>回调函数(Callback) [[⬆]](#top)\r\n| 回调函数(callback) |              说明(desc)              \t\t\t| 参数(args) |\r\n|-------------------|-----------------------------------------------|-----------|\r\n| init   \t     \t| 创建对象成功时触发。                                 | null      |\r\n| action    \t\t| 执行命令时触发。                                    \t| command(Object) |\r\n\r\n### <a name=\"known-issues\"></a>已知问题(Issues) [[⬆]](#top)\r\n\r\n### <a name=\"license\"></a>License [[⬆]](#top)\r\nReleased under [MIT] LICENSE\r\n\r\n---\r\n[shape-shifter]: https://github.com/kennethcachia/shape-shifter\r\n[Demo]: https://lixinliang.github.io/led/1.html\r\n[How to use]: https://lixinliang.github.io/led/2.html\r\n[MIT]: http://rem.mit-license.org/","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}